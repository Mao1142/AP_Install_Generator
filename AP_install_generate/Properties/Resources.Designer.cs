//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AP_install_generate.Properties {
    using System;
    
    
    /// <summary>
    ///   用於查詢當地語系化字串等的強類型資源類別。
    /// </summary>
    // 這個類別是自動產生的，是利用 StronglyTypedResourceBuilder
    // 類別透過 ResGen 或 Visual Studio 這類工具。
    // 若要加入或移除成員，請編輯您的 .ResX 檔，然後重新執行 ResGen
    // (利用 /str 選項)，或重建您的 VS 專案。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   傳回這個類別使用的快取的 ResourceManager 執行個體。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AP_install_generate.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   覆寫目前執行緒的 CurrentUICulture 屬性，對象是所有
        ///   使用這個強類型資源類別的資源查閱。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查詢類似 # Defaults for hostapd initscript
        ///#
        ///# WARNING: The DAEMON_CONF setting has been deprecated and will be removed
        ///#          in future package releases.
        ///#
        ///# See /usr/share/doc/hostapd/README.Debian for information about alternative
        ///# methods of managing hostapd.
        ///#
        ///# Uncomment and set DAEMON_CONF to the absolute path of a hostapd configuration
        ///# file and hostapd will be started during system boot. An example configuration
        ///# file can be found at /usr/share/doc/hostapd/examples/hostapd.conf.gz
        ///#
        ///DAEMON_CONF=&quot;/etc [字串的其餘部分已遭截斷]&quot;; 的當地語系化字串。
        /// </summary>
        internal static string hostapd {
            get {
                return ResourceManager.GetString("hostapd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查詢類似 #!/bin/sh -e
        ///#
        ///# rc.local
        ///#
        ///# This script is executed at the end of each multiuser runlevel.
        ///# Make sure that the script will &quot;exit 0&quot; on success or any other
        ///# value on error.
        ///#
        ///# In order to enable or disable this script just change the execution
        ///# bits.
        ///#
        ///# By default this script does nothing.
        ///
        ///# Print the IP address
        ///_IP=$(hostname -I) || true
        ///if [ &quot;$_IP&quot; ]; then
        ///  printf &quot;My IP address is %s\n&quot; &quot;$_IP&quot;
        ///fi
        ///# Special for using wlan0 as an access point
        ///iptables-restore &lt; /etc/iptables.ipv4.nat
        ///exit 0 的當地語系化字串。
        /// </summary>
        internal static string rc_local {
            get {
                return ResourceManager.GetString("rc_local", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查詢類似 #
        ///# /etc/sysctl.conf - Configuration file for setting system variables
        ///# See /etc/sysctl.d/ for additional system variables.
        ///# See sysctl.conf (5) for information.
        ///#
        ///
        ///#kernel.domainname = example.com
        ///
        ///# Uncomment the following to stop low-level messages on console
        ///#kernel.printk = 3 4 1 3
        ///
        ///##############################################################3
        ///# Functions previously found in netbase
        ///#
        ///
        ///# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
        ///# Turn on Source Address Verificat [字串的其餘部分已遭截斷]&quot;; 的當地語系化字串。
        /// </summary>
        internal static string sysctl {
            get {
                return ResourceManager.GetString("sysctl", resourceCulture);
            }
        }
    }
}
